[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "main-module/week-01.html",
    "href": "main-module/week-01.html",
    "title": "sains-data-2023",
    "section": "",
    "text": "Pada module ini kita akan coba mememahami package pandas, yang merupakan package inti dalam sains-data. kita akan coba melakukan beberapa transformasi data menggunakan pandas.\nsebelum itu, python module di bawah ini yang akan digunakan selama praktikum.\n\nimport numpy as np\nimport pandas as pd\n\n\n\n\npandas.Series sangat mirip dengan array NumPy (bahkan dibangun di atas objek array NumPy). Yang membedakan array NumPy dari sebuah Series adalah bahwa sebuah Series dapat memiliki label index, yang berarti dapat diindeks dengan label, bukan hanya lokasi nomor saja. Selain itu, sebuah Series tidak perlu menyimpan data numerik, ia dapat menyimpan objek Python sembarang.\n\n\nPaling mudah, ktia dapat membuat pd.Series dengan python list\n\nmy_index= ['a','b','c','d','e']\nmy_data= [1,2,3,4,5]\nmy_series= pd.Series(data=my_data, index=my_index)\n\n\nprint(my_series)\nprint(my_series.__class__)\n\na    1\nb    2\nc    3\nd    4\ne    5\ndtype: int64\n<class 'pandas.core.series.Series'>\n\n\n\n\n\nKita juga dapat membuat pd.Series dengan dictionary\n\n# creating a series from a dictionary\nmy_dict= {'a':1, 'b':2, 'c':3, 'd':4, 'e':5}\nmy_series_dict= pd.Series(my_dict)\n\n\nprint(my_series_dict)\nprint(my_series_dict.__class__)\n\na    1\nb    2\nc    3\nd    4\ne    5\ndtype: int64\n<class 'pandas.core.series.Series'>\n\n\n\n\n\n\n# Imaginary Sales Data for 1st and 2nd Quarters for Global Company\nq1 = {'Japan': 80, 'China': 450, 'India': 200, 'USA': 250}\nq2 = {'Brazil': 100,'China': 500, 'India': 210,'USA': 260}\n\n\n# Creating a Series from a Dictionary q1 and q2\nq1_series= pd.Series(q1)\nq2_series= pd.Series(q2)\n\n\nprint(q1_series)\n\nJapan     80\nChina    450\nIndia    200\nUSA      250\ndtype: int64\n\n\nKita dapat mengindeks dengan label\n\n# call values of q1_series based on named index\nprint(q1_series['Japan'])\nprint(q1_series['China'])\nprint(q1_series['India'])\n\n80\n450\n200\n\n\nkita dapat tetap dapat mengindeks dengan integer\n\n# u can also call values of q1_series based on positional index\nprint(q1_series[0])\nprint(q1_series[1])\nprint(q1_series[2])\n\n80\n450\n200\n\n\nhati-hati dalam melakukan indexing dengan label. bisa saja terjadi error jika label tidak ada di dalam pd.series\n\n# remember named index is case sensitive\ntry:\n    print(q1_series['japan'])\nexcept:\n    print('something went wrong')\n\nsomething went wrong\n\n\nOperasi aritmatik sederhana pada pd.Series bersifat broadcasting\n\n# operations with arithmetic on series are broadcasted to all values\nprint(q1_series*2)\n\nJapan    160\nChina    900\nIndia    400\nUSA      500\ndtype: int64\n\n\n\nprint(q1_series+1000)\n\nJapan    1080\nChina    1450\nIndia    1200\nUSA      1250\ndtype: int64\n\n\n\n# operation between series are also broadcasted\nprint(q1_series+q2_series)\n\nBrazil      NaN\nChina     950.0\nIndia     410.0\nJapan       NaN\nUSA       510.0\ndtype: float64\n\n\n\nprint(q1_series.add(q2_series, fill_value=0))\n\nBrazil    100.0\nChina     950.0\nIndia     410.0\nJapan      80.0\nUSA       510.0\ndtype: float64\n\n\n\n\n\n\nSebuah pd.DataFrame terdiri dari beberapa pd.Series yang berbagi nilai indeks.\n\nmy_data= np.random.randint(0,100,12).reshape(4,3)\nmy_data\n\narray([[25, 59, 18],\n       [75, 54, 65],\n       [29, 21,  7],\n       [32, 69, 16]])\n\n\nKita akan membuat pd.Dataframe melalui python list. Perhatikan bahwa kita dapat memberikan nama pada kolom dan baris\n\nmy_index= [\"jakarta\", \"bandung\", \"surabaya\", \"medan\"]\nmy_columns= [\"apple\", \"orange\", \"banana\"]\n\ndf= pd.DataFrame(data=my_data, index=my_index, columns=my_columns)\ndf\n\n\n\n\n\n  \n    \n      \n      apple\n      orange\n      banana\n    \n  \n  \n    \n      jakarta\n      25\n      59\n      18\n    \n    \n      bandung\n      75\n      54\n      65\n    \n    \n      surabaya\n      29\n      21\n      7\n    \n    \n      medan\n      32\n      69\n      16\n    \n  \n\n\n\n\n\ndf_2= pd.DataFrame(data=my_data)\ndf_2\n\n\n\n\n\n  \n    \n      \n      0\n      1\n      2\n    \n  \n  \n    \n      0\n      25\n      59\n      18\n    \n    \n      1\n      75\n      54\n      65\n    \n    \n      2\n      29\n      21\n      7\n    \n    \n      3\n      32\n      69\n      16\n    \n  \n\n\n\n\n\ndf_3= pd.DataFrame(data=my_data, columns=my_columns)\ndf_3\n\n\n\n\n\n  \n    \n      \n      apple\n      orange\n      banana\n    \n  \n  \n    \n      0\n      25\n      59\n      18\n    \n    \n      1\n      75\n      54\n      65\n    \n    \n      2\n      29\n      21\n      7\n    \n    \n      3\n      32\n      69\n      16\n    \n  \n\n\n\n\n\n\nJika berkas .py atau .ipynb Anda berada di lokasi folder yang sama persis dengan berkas .csv yang ingin Anda baca, cukup berikan nama berkas sebagai string, misalnya:\ndf = pd.read_csv('[some_file.csv')\nBerikan s berkas jika Anda berada di direktori yang berbeda. Jalur berkas harus 100% benar agar ini berfungsi. Misalnya:\ndf = pd.read_csv(\"C:\\\\Users\\\\myself\\\\files\\\\some_file.csv\")\nsebelum itu, kalian dapat mendownload data tersebut melalui link berikut\nclick disini\n\npwd\n\n'c:\\\\Users\\\\user\\\\Documents\\\\root\\\\personal\\\\github-personal\\\\sains-data-2023\\\\main-module'\n\n\n\ndf_tips= pd.read_csv('./data/tips.csv')\n\n\ndf_tips\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      239\n      29.03\n      5.92\n      Male\n      No\n      Sat\n      Dinner\n      3\n      9.68\n      Michael Avila\n      5296068606052842\n      Sat2657\n    \n    \n      240\n      27.18\n      2.00\n      Female\n      Yes\n      Sat\n      Dinner\n      2\n      13.59\n      Monica Sanders\n      3506806155565404\n      Sat1766\n    \n    \n      241\n      22.67\n      2.00\n      Male\n      Yes\n      Sat\n      Dinner\n      2\n      11.34\n      Keith Wong\n      6011891618747196\n      Sat3880\n    \n    \n      242\n      17.82\n      1.75\n      Male\n      No\n      Sat\n      Dinner\n      2\n      8.91\n      Dennis Dixon\n      4375220550950\n      Sat17\n    \n    \n      243\n      18.78\n      3.00\n      Female\n      No\n      Thur\n      Dinner\n      2\n      9.39\n      Michelle Hardin\n      3511451626698139\n      Thur672\n    \n  \n\n244 rows Ã— 11 columns\n\n\n\n\n\n\n\n# mengecek nama kolom\ndf_tips.columns\n\nIndex(['total_bill', 'tip', 'sex', 'smoker', 'day', 'time', 'size',\n       'price_per_person', 'Payer Name', 'CC Number', 'Payment ID'],\n      dtype='object')\n\n\n\n# mengecek \ndf_tips.index\n\nRangeIndex(start=0, stop=244, step=1)\n\n\n\ndf_tips.head(5)\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n    \n  \n\n\n\n\n\ndf_tips.tail(5)\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      239\n      29.03\n      5.92\n      Male\n      No\n      Sat\n      Dinner\n      3\n      9.68\n      Michael Avila\n      5296068606052842\n      Sat2657\n    \n    \n      240\n      27.18\n      2.00\n      Female\n      Yes\n      Sat\n      Dinner\n      2\n      13.59\n      Monica Sanders\n      3506806155565404\n      Sat1766\n    \n    \n      241\n      22.67\n      2.00\n      Male\n      Yes\n      Sat\n      Dinner\n      2\n      11.34\n      Keith Wong\n      6011891618747196\n      Sat3880\n    \n    \n      242\n      17.82\n      1.75\n      Male\n      No\n      Sat\n      Dinner\n      2\n      8.91\n      Dennis Dixon\n      4375220550950\n      Sat17\n    \n    \n      243\n      18.78\n      3.00\n      Female\n      No\n      Thur\n      Dinner\n      2\n      9.39\n      Michelle Hardin\n      3511451626698139\n      Thur672\n    \n  \n\n\n\n\n\ndf_tips.describe().transpose()\n\n\n\n\n\n  \n    \n      \n      count\n      mean\n      std\n      min\n      25%\n      50%\n      75%\n      max\n    \n  \n  \n    \n      total_bill\n      244.0\n      1.978594e+01\n      8.902412e+00\n      3.070000e+00\n      1.334750e+01\n      1.779500e+01\n      2.412750e+01\n      5.081000e+01\n    \n    \n      tip\n      244.0\n      2.998279e+00\n      1.383638e+00\n      1.000000e+00\n      2.000000e+00\n      2.900000e+00\n      3.562500e+00\n      1.000000e+01\n    \n    \n      size\n      244.0\n      2.569672e+00\n      9.510998e-01\n      1.000000e+00\n      2.000000e+00\n      2.000000e+00\n      3.000000e+00\n      6.000000e+00\n    \n    \n      price_per_person\n      244.0\n      7.888197e+00\n      2.914234e+00\n      2.880000e+00\n      5.800000e+00\n      7.255000e+00\n      9.390000e+00\n      2.027000e+01\n    \n    \n      CC Number\n      244.0\n      2.563496e+15\n      2.369340e+15\n      6.040679e+10\n      3.040731e+13\n      3.525318e+15\n      4.553675e+15\n      6.596454e+15\n    \n  \n\n\n\n\n\n\n\n\n\n\n\ndf_tips.head(5)\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n    \n  \n\n\n\n\n\nprint(df_tips[\"size\"] ==3)\nconditional_size = df_tips[\"size\"] ==3\n\n0      False\n1       True\n2       True\n3      False\n4      False\n       ...  \n239     True\n240    False\n241    False\n242    False\n243    False\nName: size, Length: 244, dtype: bool\n\n\n\ndf_tips[conditional_size].head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      16\n      10.33\n      1.67\n      Female\n      No\n      Sun\n      Dinner\n      3\n      3.44\n      Elizabeth Foster\n      4240025044626033\n      Sun9715\n    \n    \n      17\n      16.29\n      3.71\n      Male\n      No\n      Sun\n      Dinner\n      3\n      5.43\n      John Pittman\n      6521340257218708\n      Sun2998\n    \n    \n      18\n      16.97\n      3.50\n      Female\n      No\n      Sun\n      Dinner\n      3\n      5.66\n      Laura Martinez\n      30422275171379\n      Sun2789\n    \n  \n\n\n\n\n\nconditional= (df_tips[\"size\"]==3) & (df_tips[\"total_bill\"]>20)\nprint(conditional)\n\n0      False\n1      False\n2       True\n3      False\n4      False\n       ...  \n239     True\n240    False\n241    False\n242    False\n243    False\nLength: 244, dtype: bool\n\n\n\ndf_tips[conditional].head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      19\n      20.65\n      3.35\n      Male\n      No\n      Sat\n      Dinner\n      3\n      6.88\n      Timothy Oneal\n      6568069240986485\n      Sat9213\n    \n    \n      35\n      24.06\n      3.60\n      Male\n      No\n      Sat\n      Dinner\n      3\n      8.02\n      Joseph Mullins\n      5519770449260299\n      Sat632\n    \n    \n      39\n      31.27\n      5.00\n      Male\n      No\n      Sat\n      Dinner\n      3\n      10.42\n      Mr. Brandon Berry\n      6011525851069856\n      Sat6373\n    \n    \n      48\n      28.55\n      2.05\n      Male\n      No\n      Sun\n      Dinner\n      3\n      9.52\n      Austin Fisher\n      6011481668986587\n      Sun4142\n    \n  \n\n\n\n\n\ndf_tips[(df_tips[\"size\"]==3) & (df_tips[\"total_bill\"]>20)].head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      19\n      20.65\n      3.35\n      Male\n      No\n      Sat\n      Dinner\n      3\n      6.88\n      Timothy Oneal\n      6568069240986485\n      Sat9213\n    \n    \n      35\n      24.06\n      3.60\n      Male\n      No\n      Sat\n      Dinner\n      3\n      8.02\n      Joseph Mullins\n      5519770449260299\n      Sat632\n    \n    \n      39\n      31.27\n      5.00\n      Male\n      No\n      Sat\n      Dinner\n      3\n      10.42\n      Mr. Brandon Berry\n      6011525851069856\n      Sat6373\n    \n    \n      48\n      28.55\n      2.05\n      Male\n      No\n      Sun\n      Dinner\n      3\n      9.52\n      Austin Fisher\n      6011481668986587\n      Sun4142\n    \n  \n\n\n\n\n\nweekend= [\"Sun\", \"Sat\"]\nconditional_in= df_tips[\"day\"].isin(weekend)\ndf_tips[conditional_in].head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n    \n  \n\n\n\n\n\ndf_tips.head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n    \n  \n\n\n\n\n\n\n\n\ndf_tips[\"day\"].unique()\n\narray(['Sun', 'Sat', 'Thur', 'Fri'], dtype=object)\n\n\n\ndf_tips.drop_duplicates([\"day\",\"time\"])[[\"day\",\"time\"]]\n\n\n\n\n\n  \n    \n      \n      day\n      time\n    \n  \n  \n    \n      0\n      Sun\n      Dinner\n    \n    \n      19\n      Sat\n      Dinner\n    \n    \n      77\n      Thur\n      Lunch\n    \n    \n      90\n      Fri\n      Dinner\n    \n    \n      220\n      Fri\n      Lunch\n    \n    \n      243\n      Thur\n      Dinner\n    \n  \n\n\n\n\n\n\n\n\n\n\n\nprint(df_tips[\"day\"])\nprint(\"=======\")\nprint(df_tips.day)\n\n0       Sun\n1       Sun\n2       Sun\n3       Sun\n4       Sun\n       ... \n239     Sat\n240     Sat\n241     Sat\n242     Sat\n243    Thur\nName: day, Length: 244, dtype: object\n=======\n0       Sun\n1       Sun\n2       Sun\n3       Sun\n4       Sun\n       ... \n239     Sat\n240     Sat\n241     Sat\n242     Sat\n243    Thur\nName: day, Length: 244, dtype: object\n\n\n\ndf_tips[[\"day\",\"time\"]]\n\n\n\n\n\n  \n    \n      \n      day\n      time\n    \n  \n  \n    \n      0\n      Sun\n      Dinner\n    \n    \n      1\n      Sun\n      Dinner\n    \n    \n      2\n      Sun\n      Dinner\n    \n    \n      3\n      Sun\n      Dinner\n    \n    \n      4\n      Sun\n      Dinner\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      239\n      Sat\n      Dinner\n    \n    \n      240\n      Sat\n      Dinner\n    \n    \n      241\n      Sat\n      Dinner\n    \n    \n      242\n      Sat\n      Dinner\n    \n    \n      243\n      Thur\n      Dinner\n    \n  \n\n244 rows Ã— 2 columns\n\n\n\n\n\n\n\ndf_tips[\"tips_percentage\"]= df_tips[\"tip\"]/df_tips[\"total_bill\"]*100\n\ndf_tips.head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n      tips_percentage\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n      5.944673\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n      16.054159\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n      16.658734\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n      13.978041\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n      14.680765\n    \n  \n\n\n\n\n\n\n\n\ndf_tips.rename(columns={\"tips_percentage\":\"tips_percentage_%\"}, inplace=True)\ndf_tips.head()\n\n\n\n\n\n  \n    \n      \n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n      Payment ID\n      tips_percentage_%\n    \n  \n  \n    \n      0\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n      Sun2959\n      5.944673\n    \n    \n      1\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n      Sun4608\n      16.054159\n    \n    \n      2\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n      Sun4458\n      16.658734\n    \n    \n      3\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n      Sun5260\n      13.978041\n    \n    \n      4\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n      Sun2251\n      14.680765\n    \n  \n\n\n\n\n\n\n\n\n#relocate tips_percentage_% column to the rightmost\ncols= list(df_tips.columns)\ncols= [cols[-1]]+ cols[:-2]\n\ndf_tips= df_tips[cols]\n\n\ndf_tips\n\n\n\n\n\n  \n    \n      \n      tips_percentage_%\n      total_bill\n      tip\n      sex\n      smoker\n      day\n      time\n      size\n      price_per_person\n      Payer Name\n      CC Number\n    \n  \n  \n    \n      0\n      5.944673\n      16.99\n      1.01\n      Female\n      No\n      Sun\n      Dinner\n      2\n      8.49\n      Christy Cunningham\n      3560325168603410\n    \n    \n      1\n      16.054159\n      10.34\n      1.66\n      Male\n      No\n      Sun\n      Dinner\n      3\n      3.45\n      Douglas Tucker\n      4478071379779230\n    \n    \n      2\n      16.658734\n      21.01\n      3.50\n      Male\n      No\n      Sun\n      Dinner\n      3\n      7.00\n      Travis Walters\n      6011812112971322\n    \n    \n      3\n      13.978041\n      23.68\n      3.31\n      Male\n      No\n      Sun\n      Dinner\n      2\n      11.84\n      Nathaniel Harris\n      4676137647685994\n    \n    \n      4\n      14.680765\n      24.59\n      3.61\n      Female\n      No\n      Sun\n      Dinner\n      4\n      6.15\n      Tonya Carter\n      4832732618637221\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      239\n      20.392697\n      29.03\n      5.92\n      Male\n      No\n      Sat\n      Dinner\n      3\n      9.68\n      Michael Avila\n      5296068606052842\n    \n    \n      240\n      7.358352\n      27.18\n      2.00\n      Female\n      Yes\n      Sat\n      Dinner\n      2\n      13.59\n      Monica Sanders\n      3506806155565404\n    \n    \n      241\n      8.822232\n      22.67\n      2.00\n      Male\n      Yes\n      Sat\n      Dinner\n      2\n      11.34\n      Keith Wong\n      6011891618747196\n    \n    \n      242\n      9.820426\n      17.82\n      1.75\n      Male\n      No\n      Sat\n      Dinner\n      2\n      8.91\n      Dennis Dixon\n      4375220550950\n    \n    \n      243\n      15.974441\n      18.78\n      3.00\n      Female\n      No\n      Thur\n      Dinner\n      2\n      9.39\n      Michelle Hardin\n      3511451626698139\n    \n  \n\n244 rows Ã— 11 columns"
  }
]